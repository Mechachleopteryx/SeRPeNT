#include <core/structs.h>

/*
 * Generate an element of a vector of gaussian white noise adjusted
 * to a given mean and variance.
 *
 * Vector is generated by the Central Limit Thorem Method, that states that
 * the sum of N randoms will approach normal distribution as N approaches infinity.
 * N is recommended to be >= 20.
 *
 * @reference Jeruchim, "Simulation of communication systems"
 *            1st Ed. Springer, 1992.
 *
 * @arg const double signal[]
 *   Deterministic signal
 * @arg const double mean
 *   Mean value which the vector will be adjusted for
 * @arg const double variance
 *   Variance value which the vector will be adjusted for
 *
 * @return An element of the gaussian white noise vector
 */
double gnoise(const double signal[], const double mean, const double variance);

/*
 * Calculate the deterministic correlation between two deterministic
 * signals x and y, of length n_x and n_y respectively, over the range
 * of lags : 0 to max(n_x-1, n_y-1).
 *
 * The correlation is normalized so that the auto-correlations at 
 * 0 lag are identically 1.0
 *
 * @reference: Orfanidis, "Optimum Signal Processing. An Introduction"
 *             2nd Ed. Macmillan, 1988.
 *
 * @arg double corr[] 
 *   Normalized correlation for the range of lags
 * @arg double x[]
 *   Deterministic signal x
 * @arg n_x
 *   Length of the signal x
 * @arg double y[]
 *   Deterministic signal y
 * @arg n_y
 *   Length of the signal y
 *
 * @return The index position on the corr vector with the maximum x-corr score
 */
int nxcorr(double corr[], const double x[], size_t n_x, const double y[], size_t n_y);
